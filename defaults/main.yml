---
postgres_exporter_config_dir: /var/lib/postgres_exporter
postgres_exporter_run_in_docker: false
#You should define var "postgres_exporter_run_hybrid=true", if you want to use postgres exporter in docker and standalone together.
postgres_exporter_run_hybrid: false
postgres_exporter_docker_network_name: prom_network
postgres_exporter_container_name: postgres_exporter
postgres_exporter_docker_services:
  - name: "{{ postgres_exporter_container_name }}"
    environment:
      - DATA_SOURCE_NAME="postgresql://postgres:password@postgres:5432?sslmode=disable"
    command: "{{ postgres_exporter_additional_args }}"
    volumes: "{{ postgres_exporter_volumes }}"
    port: "{{ postgres_exporter_host_port }}"

postgres_exporter_docker_image: "prometheuscommunity/postgres-exporter:v{{ postgres_exporter_version }}"
postgres_exporter_docker_labels:
  - prometheus
  - exporter
  - postgres_exporter
postgres_exporter_host_address: 127.0.0.1
postgres_exporter_host_port: 9187
postgres_exporter_version: '0.15.0'
postgres_exporter_arch: linux-amd64
postgres_exporter_metrics_path: metrics
postgres_exporter_user: postgres_exporter
postgres_exporter_data_source_name: "postgresql://postgres:postgres@127.0.0.1:5432?sslmode=disable"

#You can use list "postgres_exporter_containers" for some some containers of docker exporter in host.
#Remeber! If you use variable "postgres_exporter_run_hybrid=true", you should define variables for postgres exporter in docker only in list!
# postgres_exporter_containers:
#   - postgres_exporter_container_name: postgres_exporter_01
#     postgres_exporter_host_port: 9187
#     postgres_exporter_docker_network_name: prom_network
#     postgres_exporter_data_source_name: "postgresql://postgres:postgres@127.0.0.1:5432?sslmode=disable"

postgres_exporter_auth_modules: {}

# Example
# postgres_exporter_auth_modules:
#   foo1: # Set this to any name you want
#     type: userpass
#     userpass:
#       username: first
#       password: firstpass
#     options:
#       # options become key=value parameters of the DSN
#       sslmode: disable

postgres_exporter_additional_args: --config.file {{ postgres_exporter_config_dir }}/postgres_exporter.yml --extend.query-path {{ postgres_exporter_config_dir }}/queries.yml
postgres_exporter_volumes:
  - "{{ postgres_exporter_config_dir }}:{{ postgres_exporter_config_dir }}"

postgres_exporter_stack_name: postgres_exporter
postgres_exporter_swarm_deploy:
  mode: replicated
  replicas: 1

# example postgres_exporter_swarm_deploy:
#   mode: replicated
#   replicas: 2
#   restart_policy:
#     condition: any
#     delay: 10s
#   resources:
#     limits:
#       memory: 512M
#     reservations:
#       memory: 256M
#   update_config:
#     parallelism: 1
#     delay: 30s
#     failure_action: rollback
#   placement:
#     max_replicas_per_node: 1
#     constraints:
#       - node.labels.postgres_exporter == true

postgres_exporter_additionlal_queries:
  pg_stat_statements:
    query: |
      SELECT
        pg_get_userbyid(userid) as user,
        pg_database.datname,
        pg_stat_statements.queryid,
        pg_stat_statements.calls as calls,
        (pg_stat_statements.total_plan_time + pg_stat_statements.total_exec_time) / 1000.0 as total_time_seconds,
        pg_stat_statements.rows as rows_total,
        pg_stat_statements.blk_read_time / 1000.0 as block_read_seconds_total,
        pg_stat_statements.blk_write_time / 1000.0 as block_write_seconds_total
      FROM pg_stat_statements
      JOIN pg_database
        ON pg_database.oid = pg_stat_statements.dbid
      WHERE
        (pg_stat_statements.total_plan_time + pg_stat_statements.total_exec_time) > (
          SELECT percentile_cont(0.1)
          WITHIN GROUP (ORDER BY (total_plan_time + total_exec_time))
          FROM pg_stat_statements
        )
      ORDER BY total_time_seconds DESC
      LIMIT 100;
    metrics:
      - user:
          usage: "LABEL"
          description: "The user who executed the statement"
      - datname:
          usage: "LABEL"
          description: "The database in which the statement was executed"
      - queryid:
          usage: "LABEL"
          description: "Internal hash code, computed from the statement's parse tree"
      - calls:
          usage: "COUNTER"
          description: "Number of times executed"
      - total_time_seconds:
          usage: "COUNTER"
          description: "Total time spent in the statement, in seconds"
      - rows_total:
          usage: "COUNTER"
          description: "Total number of rows retrieved or affected by the statement"
      - block_read_seconds_total:
          usage: "COUNTER"
          description: "Total time the statement spent reading blocks, in seconds"
      - block_write_seconds_total:
          usage: "COUNTER"
          description: "Total time the statement spent writing blocks, in seconds"
